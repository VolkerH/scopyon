# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip | cat && test ${PIPESTATUS} -eq 0
            pip install --progress-bar=off -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py test

      - run:
          name: build wheels
          command: |
            . venv/bin/activate
            pip install --progress-bar=off wheel
            python setup.py bdist_wheel

      - store_artifacts:
          path: dist

  deploy:
    docker:
      - image: circleci/python:3.6

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip | cat && test ${PIPESTATUS} -eq 0
            pip install --progress-bar=off -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py test

      - run:
          name: build wheels
          command: |
            . venv/bin/activate
            pip install --progress-bar=off wheel
            python setup.py bdist_wheel

      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*

      - store_artifacts:
          path: dist

  workflows:
    version: 2
    build_and_deploy:
      jobs:
        - build:
            filters:
              tags:
                only: /.*/
        - deploy:
            requires:
              - build
            filters:
              tags:
                only: /[0-9]+(\.[0-9]+)*/
              branches:
                ignore: /.*/
